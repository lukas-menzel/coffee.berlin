{"version":3,"sources":["logo.svg","components/Places.js","components/PlacesForm.js","components/Navigation.js","App.js","reportWebVitals.js","index.js"],"names":["Places","places","List","map","place","Item","name","street_house_number","PlacesForm","onNewPlace","useState","setName","Form","Field","Input","placeholder","value","onChange","e","target","Button","onClick","a","fetch","method","headers","body","JSON","stringify","ok","console","log","ChartBarIcon","CursorClickIcon","ShieldCheckIcon","ViewGridIcon","RefreshIcon","PlayIcon","PhoneIcon","SupportIcon","BookmarkAltIcon","CalendarIcon","App","setPlaces","useEffect","then","response","json","data","Container","style","marginTop","className","to","exact","path","src","logo","alt","href","rel","currentPlaces","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAAe,MAA0B,iC,kCCG5BA,EAAS,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACvB,OACE,cAACC,EAAA,EAAD,UACGD,EAAOE,KAAI,SAAAC,GACV,OACE,eAACF,EAAA,EAAKG,KAAN,WACE,cAAC,IAAD,UAASD,EAAME,OACf,8BAAMF,EAAMG,wBAFEH,EAAME,Y,sDCLnBE,EAAa,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAAiB,EACnBC,mBAAS,IADU,mBACpCJ,EADoC,KAC9BK,EAD8B,KAG5C,OACE,eAACC,EAAA,EAAD,WACE,cAACA,EAAA,EAAKC,MAAN,UACE,cAACC,EAAA,EAAD,CACEC,YAAY,aACZC,MAAOV,EACPW,SAAU,SAAAC,GAAC,OAAIP,EAAQO,EAAEC,OAAOH,YAGpC,cAACJ,EAAA,EAAKC,MAAN,UACE,cAACO,EAAA,EAAD,CACEC,QAAO,sBAAE,4BAAAC,EAAA,6DACDlB,EAAQ,CAAEE,QADT,SAEgBiB,MAAM,aAAc,CACzCC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUxB,KAPhB,cAUMyB,KACXC,QAAQC,IAAI,oBACZtB,EAAWL,GACXO,EAAQ,KAbH,2CADX,0B,gCCSEqB,IAMAC,IAE2FC,IAK3FC,IAMAC,IAI+BC,IACGC,IAOlCC,IAMAC,IAMAC,IAE4FP,ICVvFQ,MAnDf,WAAgB,IAAD,EACehC,mBAAS,IADxB,mBACNT,EADM,KACE0C,EADF,KAWb,OARAC,qBAAU,WACRrB,MAAM,cAAcsB,MAAK,SAAAC,GAAQ,OAC/BA,EAASC,OAAOF,MAAK,SAAAG,GACnBL,EAAUK,EAAK/C,gBAGlB,IAGD,cAACgD,EAAA,EAAD,CAAWC,MAAO,CAAEC,UAAW,IAA/B,SACJ,eAAC,IAAD,WACU,gCACE,cAAC,IAAD,CAAMC,UAAU,WAAWC,GAAG,IAA9B,kBADF,YAGE,cAAC,IAAD,CAAMD,UAAU,WAAWC,GAAG,SAA9B,sBAEF,eAAC,IAAD,WACE,eAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,UACI,qBAAKC,IAAKC,EAAML,UAAU,WAAWM,IAAI,SACzC,sCACO,8CADP,0BAGA,mBACEN,UAAU,WACVO,KAAK,sBACLxC,OAAO,SACPyC,IAAI,sBAJN,yBAQA,cAAC,EAAD,CACRnD,WAAY,SAAAL,GAAK,OACfuC,GAAU,SAAAkB,GAAa,OAAKzD,GAAL,mBAAeyD,UAG1C,cAAC,EAAD,CAAQ5D,OAAQA,OAEV,cAAC,IAAD,CAAOsD,KAAK,SAAZ,SACI,2DCtCDO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.75f28cf0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\nimport { List, Header } from \"semantic-ui-react\";\n\nexport const Places = ({ places }) => {\n  return (\n    <List>\n      {places.map(place => {\n        return (\n          <List.Item key={place.name}>\n            <Header>{place.name}</Header>\n            <div>{place.street_house_number}</div>\n            \n          </List.Item>\n        );\n      })}\n    </List>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Form, Input, Button } from \"semantic-ui-react\";\n\nexport const PlacesForm = ({ onNewPlace }) => {\n  const [ name, setName] = useState(\"\");\n\n  return (\n    <Form>\n      <Form.Field>\n        <Input\n          placeholder=\"Place name\"\n          value={name}\n          onChange={e => setName(e.target.value)}\n        />\n      </Form.Field>\n      <Form.Field>\n        <Button\n          onClick={async () => {\n            const place = { name };\n            const response = await fetch(\"/api/place\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify(place)\n            });\n\n            if (response.ok) {\n              console.log(\"response worked!\");\n              onNewPlace(place);\n              setName(\"\");\n            }\n          }}\n        >\n          submit\n        </Button>\n      </Form.Field>\n    </Form>\n  );\n};\n","/* This example requires Tailwind CSS v2.0+ */\nimport React from \"react\";\nimport { Fragment } from 'react'\nimport { Popover, Transition } from '@headlessui/react'\nimport {\n  BookmarkAltIcon,\n  CalendarIcon,\n  ChartBarIcon,\n  CursorClickIcon,\n  MenuIcon,\n  PhoneIcon,\n  PlayIcon,\n  RefreshIcon,\n  ShieldCheckIcon,\n  SupportIcon,\n  ViewGridIcon,\n  XIcon,\n} from '@heroicons/react/outline'\nimport { ChevronDownIcon } from '@heroicons/react/solid'\n\nconst solutions = [\n  {\n    name: 'Analytics',\n    description: 'Get a better understanding of where your traffic is coming from.',\n    href: '#',\n    icon: ChartBarIcon,\n  },\n  {\n    name: 'Engagement',\n    description: 'Speak directly to your customers in a more meaningful way.',\n    href: '#',\n    icon: CursorClickIcon,\n  },\n  { name: 'Security', description: \"Your customers' data will be safe and secure.\", href: '#', icon: ShieldCheckIcon },\n  {\n    name: 'Integrations',\n    description: \"Connect with third-party tools that you're already using.\",\n    href: '#',\n    icon: ViewGridIcon,\n  },\n  {\n    name: 'Automations',\n    description: 'Build strategic funnels that will drive your customers to convert',\n    href: '#',\n    icon: RefreshIcon,\n  },\n]\nconst callsToAction = [\n  { name: 'Watch Demo', href: '#', icon: PlayIcon },\n  { name: 'Contact Sales', href: '#', icon: PhoneIcon },\n]\nconst resources = [\n  {\n    name: 'Help Center',\n    description: 'Get all of your questions answered in our forums or contact support.',\n    href: '#',\n    icon: SupportIcon,\n  },\n  {\n    name: 'Guides',\n    description: 'Learn how to maximize our platform to get the most out of it.',\n    href: '#',\n    icon: BookmarkAltIcon,\n  },\n  {\n    name: 'Events',\n    description: 'See what meet-ups and other events we might be planning near you.',\n    href: '#',\n    icon: CalendarIcon,\n  },\n  { name: 'Security', description: 'Understand how we take your privacy seriously.', href: '#', icon: ShieldCheckIcon },\n]\nconst recentPosts = [\n  { id: 1, name: 'Boost your conversion rate', href: '#' },\n  { id: 2, name: 'How to use search engine optimization to drive traffic to your site', href: '#' },\n  { id: 3, name: 'Improve your customer experience', href: '#' },\n]\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\nconst Header = () => {\n    return (\n    <Popover className=\"relative bg-white\">\n      {({ open }) => (\n        <>\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6\">\n            <div className=\"flex justify-between items-center border-b-2 border-gray-100 py-6 md:justify-start md:space-x-10\">\n              <div className=\"flex justify-start lg:w-0 lg:flex-1\">\n                <a href=\"#\">\n                  <span className=\"sr-only\">Workflow</span>\n                  <img\n                    className=\"h-8 w-auto sm:h-10\"\n                    src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-600.svg\"\n                    alt=\"\"\n                  />\n                </a>\n              </div>\n              <div className=\"-mr-2 -my-2 md:hidden\">\n                <Popover.Button className=\"bg-white rounded-md p-2 inline-flex items-center justify-center text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500\">\n                  <span className=\"sr-only\">Open menu</span>\n                  <MenuIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                </Popover.Button>\n              </div>\n              <Popover.Group as=\"nav\" className=\"hidden md:flex space-x-10\">\n                <Popover className=\"relative\">\n                  {({ open }) => (\n                    <>\n                      <Popover.Button\n                        className={classNames(\n                          open ? 'text-gray-900' : 'text-gray-500',\n                          'group bg-white rounded-md inline-flex items-center text-base font-medium hover:text-gray-900 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'\n                        )}\n                      >\n                        <span>Solutions</span>\n                        <ChevronDownIcon\n                          className={classNames(\n                            open ? 'text-gray-600' : 'text-gray-400',\n                            'ml-2 h-5 w-5 group-hover:text-gray-500'\n                          )}\n                          aria-hidden=\"true\"\n                        />\n                      </Popover.Button>\n\n                      <Transition\n                        show={open}\n                        as={Fragment}\n                        enter=\"transition ease-out duration-200\"\n                        enterFrom=\"opacity-0 translate-y-1\"\n                        enterTo=\"opacity-100 translate-y-0\"\n                        leave=\"transition ease-in duration-150\"\n                        leaveFrom=\"opacity-100 translate-y-0\"\n                        leaveTo=\"opacity-0 translate-y-1\"\n                      >\n                        <Popover.Panel\n                          static\n                          className=\"absolute z-10 -ml-4 mt-3 transform px-2 w-screen max-w-md sm:px-0 lg:ml-0 lg:left-1/2 lg:-translate-x-1/2\"\n                        >\n                          <div className=\"rounded-lg shadow-lg ring-1 ring-black ring-opacity-5 overflow-hidden\">\n                            <div className=\"relative grid gap-6 bg-white px-5 py-6 sm:gap-8 sm:p-8\">\n                              {solutions.map((item) => (\n                                <a\n                                  key={item.name}\n                                  href={item.href}\n                                  className=\"-m-3 p-3 flex items-start rounded-lg hover:bg-gray-50\"\n                                >\n                                  <item.icon className=\"flex-shrink-0 h-6 w-6 text-indigo-600\" aria-hidden=\"true\" />\n                                  <div className=\"ml-4\">\n                                    <p className=\"text-base font-medium text-gray-900\">{item.name}</p>\n                                    <p className=\"mt-1 text-sm text-gray-500\">{item.description}</p>\n                                  </div>\n                                </a>\n                              ))}\n                            </div>\n                            <div className=\"px-5 py-5 bg-gray-50 space-y-6 sm:flex sm:space-y-0 sm:space-x-10 sm:px-8\">\n                              {callsToAction.map((item) => (\n                                <div key={item.name} className=\"flow-root\">\n                                  <a\n                                    href={item.href}\n                                    className=\"-m-3 p-3 flex items-center rounded-md text-base font-medium text-gray-900 hover:bg-gray-100\"\n                                  >\n                                    <item.icon className=\"flex-shrink-0 h-6 w-6 text-gray-400\" aria-hidden=\"true\" />\n                                    <span className=\"ml-3\">{item.name}</span>\n                                  </a>\n                                </div>\n                              ))}\n                            </div>\n                          </div>\n                        </Popover.Panel>\n                      </Transition>\n                    </>\n                  )}\n                </Popover>\n\n                <a href=\"#\" className=\"text-base font-medium text-gray-500 hover:text-gray-900\">\n                  Pricing\n                </a>\n                <a href=\"#\" className=\"text-base font-medium text-gray-500 hover:text-gray-900\">\n                  Docs\n                </a>\n\n                <Popover className=\"relative\">\n                  {({ open }) => (\n                    <>\n                      <Popover.Button\n                        className={classNames(\n                          open ? 'text-gray-900' : 'text-gray-500',\n                          'group bg-white rounded-md inline-flex items-center text-base font-medium hover:text-gray-900 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'\n                        )}\n                      >\n                        <span>More</span>\n                        <ChevronDownIcon\n                          className={classNames(\n                            open ? 'text-gray-600' : 'text-gray-400',\n                            'ml-2 h-5 w-5 group-hover:text-gray-500'\n                          )}\n                          aria-hidden=\"true\"\n                        />\n                      </Popover.Button>\n\n                      <Transition\n                        show={open}\n                        as={Fragment}\n                        enter=\"transition ease-out duration-200\"\n                        enterFrom=\"opacity-0 translate-y-1\"\n                        enterTo=\"opacity-100 translate-y-0\"\n                        leave=\"transition ease-in duration-150\"\n                        leaveFrom=\"opacity-100 translate-y-0\"\n                        leaveTo=\"opacity-0 translate-y-1\"\n                      >\n                        <Popover.Panel\n                          static\n                          className=\"absolute z-10 left-1/2 transform -translate-x-1/2 mt-3 px-2 w-screen max-w-md sm:px-0\"\n                        >\n                          <div className=\"rounded-lg shadow-lg ring-1 ring-black ring-opacity-5 overflow-hidden\">\n                            <div className=\"relative grid gap-6 bg-white px-5 py-6 sm:gap-8 sm:p-8\">\n                              {resources.map((item) => (\n                                <a\n                                  key={item.name}\n                                  href={item.href}\n                                  className=\"-m-3 p-3 flex items-start rounded-lg hover:bg-gray-50\"\n                                >\n                                  <item.icon className=\"flex-shrink-0 h-6 w-6 text-indigo-600\" aria-hidden=\"true\" />\n                                  <div className=\"ml-4\">\n                                    <p className=\"text-base font-medium text-gray-900\">{item.name}</p>\n                                    <p className=\"mt-1 text-sm text-gray-500\">{item.description}</p>\n                                  </div>\n                                </a>\n                              ))}\n                            </div>\n                            <div className=\"px-5 py-5 bg-gray-50 sm:px-8 sm:py-8\">\n                              <div>\n                                <h3 className=\"text-sm tracking-wide font-medium text-gray-500 uppercase\">\n                                  Recent Posts\n                                </h3>\n                                <ul className=\"mt-4 space-y-4\">\n                                  {recentPosts.map((post) => (\n                                    <li key={post.id} className=\"text-base truncate\">\n                                      <a href={post.href} className=\"font-medium text-gray-900 hover:text-gray-700\">\n                                        {post.name}\n                                      </a>\n                                    </li>\n                                  ))}\n                                </ul>\n                              </div>\n                              <div className=\"mt-5 text-sm\">\n                                <a href=\"#\" className=\"font-medium text-indigo-600 hover:text-indigo-500\">\n                                  {' '}\n                                  View all posts <span aria-hidden=\"true\">&rarr;</span>\n                                </a>\n                              </div>\n                            </div>\n                          </div>\n                        </Popover.Panel>\n                      </Transition>\n                    </>\n                  )}\n                </Popover>\n              </Popover.Group>\n              <div className=\"hidden md:flex items-center justify-end md:flex-1 lg:w-0\">\n                <a href=\"#\" className=\"whitespace-nowrap text-base font-medium text-gray-500 hover:text-gray-900\">\n                  Sign in\n                </a>\n                <a\n                  href=\"#\"\n                  className=\"ml-8 whitespace-nowrap inline-flex items-center justify-center px-4 py-2 border border-transparent rounded-md shadow-sm text-base font-medium text-white bg-indigo-600 hover:bg-indigo-700\"\n                >\n                  Sign up\n                </a>\n              </div>\n            </div>\n          </div>\n\n          <Transition\n            show={open}\n            as={Fragment}\n            enter=\"duration-200 ease-out\"\n            enterFrom=\"opacity-0 scale-95\"\n            enterTo=\"opacity-100 scale-100\"\n            leave=\"duration-100 ease-in\"\n            leaveFrom=\"opacity-100 scale-100\"\n            leaveTo=\"opacity-0 scale-95\"\n          >\n            <Popover.Panel\n              focus\n              static\n              className=\"absolute top-0 inset-x-0 p-2 transition transform origin-top-right md:hidden\"\n            >\n              <div className=\"rounded-lg shadow-lg ring-1 ring-black ring-opacity-5 bg-white divide-y-2 divide-gray-50\">\n                <div className=\"pt-5 pb-6 px-5\">\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <img\n                        className=\"h-8 w-auto\"\n                        src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-600.svg\"\n                        alt=\"Workflow\"\n                      />\n                    </div>\n                    <div className=\"-mr-2\">\n                      <Popover.Button className=\"bg-white rounded-md p-2 inline-flex items-center justify-center text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500\">\n                        <span className=\"sr-only\">Close menu</span>\n                        <XIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                      </Popover.Button>\n                    </div>\n                  </div>\n                  <div className=\"mt-6\">\n                    <nav className=\"grid gap-y-8\">\n                      {solutions.map((item) => (\n                        <a\n                          key={item.name}\n                          href={item.href}\n                          className=\"-m-3 p-3 flex items-center rounded-md hover:bg-gray-50\"\n                        >\n                          <item.icon className=\"flex-shrink-0 h-6 w-6 text-indigo-600\" aria-hidden=\"true\" />\n                          <span className=\"ml-3 text-base font-medium text-gray-900\">{item.name}</span>\n                        </a>\n                      ))}\n                    </nav>\n                  </div>\n                </div>\n                <div className=\"py-6 px-5 space-y-6\">\n                  <div className=\"grid grid-cols-2 gap-y-4 gap-x-8\">\n                    <a href=\"#\" className=\"text-base font-medium text-gray-900 hover:text-gray-700\">\n                      Pricing\n                    </a>\n\n                    <a href=\"#\" className=\"text-base font-medium text-gray-900 hover:text-gray-700\">\n                      Docs\n                    </a>\n                    {resources.map((item) => (\n                      <a\n                        key={item.name}\n                        href={item.href}\n                        className=\"text-base font-medium text-gray-900 hover:text-gray-700\"\n                      >\n                        {item.name}\n                      </a>\n                    ))}\n                  </div>\n                  <div>\n                    <a\n                      href=\"#\"\n                      className=\"w-full flex items-center justify-center px-4 py-2 border border-transparent rounded-md shadow-sm text-base font-medium text-white bg-indigo-600 hover:bg-indigo-700\"\n                    >\n                      Sign up\n                    </a>\n                    <p className=\"mt-6 text-center text-base font-medium text-gray-500\">\n                      Existing customer?{' '}\n                      <a href=\"#\" className=\"text-indigo-600 hover:text-indigo-500\">\n                        Sign in\n                      </a>\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </Popover.Panel>\n          </Transition>\n        </>\n      )}\n    </Popover>\n  )\n}\nexport default Header\n","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Link, Switch, Route } from 'react-router-dom';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Places } from \"./components/Places\";\nimport { PlacesForm } from \"./components/PlacesForm\";\nimport { Container } from \"semantic-ui-react\";\nimport { Header } from \"./components/Navigation\"\n\nfunction App() {\n  const [places, setPlaces] = useState([]);\n\n  useEffect(() => {\n    fetch(\"/api/place\").then(response =>\n      response.json().then(data => {\n        setPlaces(data.places);\n      })\n    );\n  }, []);\n\n  return (\n    <Container style={{ marginTop: 40 }}>\n<BrowserRouter>\n          <div>\n            <Link className=\"App-link\" to=\"/\">Home</Link>\n            &nbsp;|&nbsp;\n            <Link className=\"App-link\" to=\"/page2\">Page2</Link>\n          </div>\n          <Switch>\n            <Route exact path=\"/\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                <p>\n                  Edit <code>src/App.js</code> and save to reload.\n                </p>\n                <a\n                  className=\"App-link\"\n                  href=\"https://reactjs.org\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Learn React\n                </a>\n                <PlacesForm\n        onNewPlace={place =>\n          setPlaces(currentPlaces => [place, ...currentPlaces])\n        }\n      />\n      <Places places={places} />\n            </Route>\n            <Route path=\"/page2\">\n                <p>This is page 2!</p>\n            </Route>\n          </Switch>\n        </BrowserRouter>\n     \n    </Container>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}